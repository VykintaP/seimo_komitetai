Index: visualize/components/filters.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from dash import html, dcc\r\nfrom utils.db import query_df\r\nfrom config import TABLE_CLASSIFIED\r\nimport pandas as pd\r\n\r\n\r\ndef get_filters():\r\n    df = query_df(f\"SELECT DISTINCT komitetas FROM {TABLE_CLASSIFIED}\")\r\n    committees = sorted(df[\"komitetas\"].dropna().unique())\r\n\r\n    return html.Div(className=\"grid-filters\", children=[\r\n        dcc.Dropdown(\r\n            id=\"committee-filter\",\r\n            options=[{\"label\": komitetas, \"value\": komitetas} for komitetas in committees],\r\n            placeholder=\"Pasirink komitetą (-us)\",\r\n            multi=True,\r\n            clearable=True\r\n        ),\r\n        dcc.DatePickerRange(\r\n            id=\"date-filter\",\r\n            display_format=\"YYYY-MM-DD\",\r\n            start_date_placeholder_text=\"Data nuo\",\r\n            end_date_placeholder_text=\"Data iki\",\r\n            minimum_nights=0\r\n        )\r\n    ])\r\n\r\ndef get_committee_options():\r\n    df = query_df(\"SELECT DISTINCT komitetas FROM classified_questions ORDER BY komitetas\")\r\n    return [{\"label\": k, \"value\": k} for k in df[\"komitetas\"].dropna().unique()]\r\n\r\ndef filter_df_by_filters(df, filters: dict) -> pd.DataFrame:\r\n    if \"start\" in filters and \"end\" in filters:\r\n        df = df[(df[\"data\"] >= filters[\"start\"]) & (df[\"data\"] <= filters[\"end\"])]\r\n\r\n    committees = filters.get(\"committees\")\r\n    if committees:  # tik jei pasirinkta bent viena reikšmė\r\n        df = df[df[\"komitetas\"].isin(committees)]\r\n\r\n    return df\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/visualize/components/filters.py b/visualize/components/filters.py
--- a/visualize/components/filters.py	(revision f55e0a20c2ecf819aa8fd3351acbce6d7705499d)
+++ b/visualize/components/filters.py	(date 1749066852700)
@@ -1,5 +1,5 @@
 from dash import html, dcc
-from utils.db import query_df
+from visualize.utils.db import query_df
 from config import TABLE_CLASSIFIED
 import pandas as pd
 
@@ -9,13 +9,7 @@
     committees = sorted(df["komitetas"].dropna().unique())
 
     return html.Div(className="grid-filters", children=[
-        dcc.Dropdown(
-            id="committee-filter",
-            options=[{"label": komitetas, "value": komitetas} for komitetas in committees],
-            placeholder="Pasirink komitetą (-us)",
-            multi=True,
-            clearable=True
-        ),
+
         dcc.DatePickerRange(
             id="date-filter",
             display_format="YYYY-MM-DD",
Index: visualize/callbacks/filter_callbacks.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from dash import Input, Output, State, callback, ctx\r\nimport pandas as pd\r\nfrom utils.db import query_df\r\nfrom utils.filtering import filter_df_by_filters\r\nfrom config import TABLE_CLASSIFIED\r\n\r\n@callback(\r\n    Output(\"filtered-df\", \"data\"),\r\n    Input(\"main-tabs\", \"value\"),\r\n    State(\"committee-filter\", \"value\"),\r\n    State(\"date-filter\", \"start_date\"),\r\n    State(\"date-filter\", \"end_date\"),\r\n    prevent_initial_call=False\r\n)\r\ndef unified_df_loader(tab, committees, start, end):\r\n    if tab != \"dashboard\":\r\n        return []\r\n\r\n    print(\"[DEBUG] Triggered by:\", ctx.triggered_id)\r\n    print(\"[DEBUG] Filter input:\", committees, start, end)\r\n\r\n    df = query_df(f\"SELECT * FROM {TABLE_CLASSIFIED}\")\r\n    df[\"data\"] = pd.to_datetime(df[\"data\"], errors=\"coerce\")  # ← Būtina\r\n\r\n    df_filtered = filter_df_by_filters(df, {\r\n        \"committees\": committees,\r\n        \"start\": start,\r\n        \"end\": end\r\n    })\r\n\r\n    print(\"[DEBUG] After filtering:\", len(df_filtered))  # ← Dabar jau veikia\r\n\r\n    return df_filtered.to_dict(\"records\")\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/visualize/callbacks/filter_callbacks.py b/visualize/callbacks/filter_callbacks.py
--- a/visualize/callbacks/filter_callbacks.py	(revision f55e0a20c2ecf819aa8fd3351acbce6d7705499d)
+++ b/visualize/callbacks/filter_callbacks.py	(date 1749067282050)
@@ -1,14 +1,14 @@
 from dash import Input, Output, State, callback, ctx
 import pandas as pd
-from utils.db import query_df
-from utils.filtering import filter_df_by_filters
+from visualize.utils.db import query_df
+from visualize.utils.filtering import filter_df_by_filters
 from config import TABLE_CLASSIFIED
 
 @callback(
     Output("filtered-df", "data"),
+    Input("date-filter", "start_date"),
     Input("main-tabs", "value"),
     State("committee-filter", "value"),
-    State("date-filter", "start_date"),
     State("date-filter", "end_date"),
     prevent_initial_call=False
 )
@@ -18,7 +18,7 @@
 
     print("[DEBUG] Triggered by:", ctx.triggered_id)
     print("[DEBUG] Filter input:", committees, start, end)
-
+    print("[DEBUG] Komitetai:", committees)
     df = query_df(f"SELECT * FROM {TABLE_CLASSIFIED}")
     df["data"] = pd.to_datetime(df["data"], errors="coerce")  # ← Būtina
 
Index: config.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># config.py\r\nfrom pathlib import Path\r\n\r\n# 1) Bendras kelias iki duomenų bazės\r\nDB_PATH = Path(__file__).parent / \"data\" / \"classified_questions.db\"\r\n\r\n# 2) Vieningas lentelės vardas\r\nTABLE_CLASSIFIED = \"classified_questions\"\r\n\r\n# 3) Stulpelių alias’ai, jei DB schema skiriasi:\r\nCOL_DATE      = \"date\"      # originalus laukas DB\r\nCOL_QUESTION  = \"question\"\r\nCOL_THEME     = \"theme\"\r\n\r\n# 4) (nebūtina) žemėlapis alias → lietuviški pavadinimai\r\nALIASES = {\r\n    COL_DATE:     \"data\",\r\n    COL_QUESTION: \"klausimas\",\r\n    COL_THEME:    \"tema\",\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config.py b/config.py
--- a/config.py	(revision f55e0a20c2ecf819aa8fd3351acbce6d7705499d)
+++ b/config.py	(date 1749045312076)
@@ -1,18 +1,13 @@
-# config.py
 from pathlib import Path
 
-# 1) Bendras kelias iki duomenų bazės
 DB_PATH = Path(__file__).parent / "data" / "classified_questions.db"
 
-# 2) Vieningas lentelės vardas
 TABLE_CLASSIFIED = "classified_questions"
 
-# 3) Stulpelių alias’ai, jei DB schema skiriasi:
-COL_DATE      = "date"      # originalus laukas DB
+COL_DATE      = "date"
 COL_QUESTION  = "question"
 COL_THEME     = "theme"
 
-# 4) (nebūtina) žemėlapis alias → lietuviški pavadinimai
 ALIASES = {
     COL_DATE:     "data",
     COL_QUESTION: "klausimas",
Index: visualize/callbacks/layout_callbacks.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from dash import dcc, Input, Output, callback, html\r\nimport pandas as pd\r\nimport logging\r\n\r\nimport visualize.components.filters as filters_module\r\nimport visualize.components.bar_topics as bar_topics\r\nimport visualize.components.pie_topics as pie_topics\r\nimport visualize.components.line_topics as line_topics\r\nimport visualize.components.questions_table as table_module\r\n\r\nlogging.basicConfig(level=logging.INFO)\r\n\r\n@callback(\r\n    Output(\"tab-content\", \"children\"),\r\n    Input(\"main-tabs\", \"value\"),\r\n    Input(\"filtered-df\", \"data\"),\r\n    Input(\"selected-topic\", \"data\")\r\n)\r\ndef render_tab(tab, filtered_data, selected_topic):\r\n    print(\"[DEBUG] tab =\", tab)\r\n\r\n    if filtered_data:\r\n        df = pd.DataFrame(filtered_data)\r\n    else:\r\n        df = pd.DataFrame(columns=[\r\n            \"komitetas\", \"data\", \"klausimas\", \"tema\",\r\n            \"projektas\", \"atsakingi\", \"dalyviai\"\r\n        ])\r\n    print(\"[DEBUG] df.shape =\", df.shape)\r\n    print(\"[DEBUG] columns =\", df.columns.tolist())\r\n    print(\"[DEBUG] render_tab() triggered\")\r\n    if tab == \"dashboard\":\r\n        if not df.empty and \"tema\" in df.columns:\r\n            bar_fig = bar_topics.get_bar_figure(df, selected_topic)\r\n            pie_fig = pie_topics.get_pie_figure(df, selected_topic)\r\n            line_fig = line_topics.get_line_figure(df, selected_topic)\r\n        else:\r\n            bar_fig = {}\r\n            pie_fig = {}\r\n            line_fig = {}\r\n\r\n        return html.Div([\r\n\r\n            html.Div(className=\"grid-2\", children=[\r\n                html.Div(className=\"card\", children=[\r\n                    html.H4(\"Temų dažnumas\"),\r\n                    dcc.Graph(id=\"bar-topics\", figure=bar_fig)\r\n                ]),\r\n                html.Div(className=\"card\", children=[\r\n                    html.H4(\"Temų proporcijos\"),\r\n                    dcc.Graph(id=\"pie-topics\", figure=pie_fig)\r\n                ]),\r\n            ]),\r\n\r\n            html.Div(className=\"grid-2\", children=[\r\n                html.Div(className=\"card\", children=[\r\n                    html.H4(\"Klausimų sąrašas\"),\r\n                    table_module.get_questions_table(df, selected_topic)\r\n                ]),\r\n                html.Div(className=\"card\", children=[\r\n                    html.H4(\"Tema laikui bėgant\"),\r\n                    dcc.Graph(id=\"line-topics\", figure=line_fig)\r\n                ]),\r\n            ]),\r\n        ])\r\n\r\n\r\n    elif tab == \"info\":\r\n        return html.Div([\r\n            html.H3(\"Info\"),\r\n            html.P(\"Čia bus paaiškinimai apie projekto architektūrą, duomenis ir kt.\")\r\n        ])\r\n\r\n    logging.warning(f\"[WARNING] Nepažįstamas tab: {tab}\")\r\n    return html.Div([html.P(\"Nepažįstamas skirtukas\")])\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/visualize/callbacks/layout_callbacks.py b/visualize/callbacks/layout_callbacks.py
--- a/visualize/callbacks/layout_callbacks.py	(revision f55e0a20c2ecf819aa8fd3351acbce6d7705499d)
+++ b/visualize/callbacks/layout_callbacks.py	(date 1749066671294)
@@ -1,6 +1,7 @@
-from dash import dcc, Input, Output, callback, html
+from dash import dcc, Input, Output, callback, html, State
 import pandas as pd
 import logging
+import visualize.components.bar_committees as bar_committees
 
 import visualize.components.filters as filters_module
 import visualize.components.bar_topics as bar_topics
@@ -10,13 +11,15 @@
 
 logging.basicConfig(level=logging.INFO)
 
+
 @callback(
     Output("tab-content", "children"),
     Input("main-tabs", "value"),
     Input("filtered-df", "data"),
-    Input("selected-topic", "data")
+    Input("selected-topic", "data"),
+    State("committee-filter", "data")
 )
-def render_tab(tab, filtered_data, selected_topic):
+def render_tab(tab, filtered_data, selected_topic, selected_committee):
     print("[DEBUG] tab =", tab)
 
     if filtered_data:
@@ -26,10 +29,24 @@
             "komitetas", "data", "klausimas", "tema",
             "projektas", "atsakingi", "dalyviai"
         ])
+
     print("[DEBUG] df.shape =", df.shape)
     print("[DEBUG] columns =", df.columns.tolist())
     print("[DEBUG] render_tab() triggered")
+
     if tab == "dashboard":
+        if not df.empty and selected_committee is None:
+            return html.Div(className="grid-2", children=[
+                html.Div(className="card", children=[
+                    html.H4("Klausimai pagal komitetą"),
+                    dcc.Graph(id="bar-committees", figure=bar_committees.get_committees_bar(df))
+                ]),
+                html.Div(className="card", children=[
+                    html.H4("Temų proporcijos"),
+                    dcc.Graph(id="donut-topics", figure=pie_topics.get_pie_figure(df, None))
+                ])
+            ])
+
         if not df.empty and "tema" in df.columns:
             bar_fig = bar_topics.get_bar_figure(df, selected_topic)
             pie_fig = pie_topics.get_pie_figure(df, selected_topic)
@@ -41,7 +58,7 @@
 
         return html.Div([
 
-            html.Div(className="grid-2", children=[
+            html.Div(className="responsive-grid", children=[
                 html.Div(className="card", children=[
                     html.H4("Temų dažnumas"),
                     dcc.Graph(id="bar-topics", figure=bar_fig)
@@ -64,7 +81,6 @@
             ]),
         ])
 
-
     elif tab == "info":
         return html.Div([
             html.H3("Info"),
Index: inspect_schema.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># inspect_schema.py\r\nimport sqlite3\r\nimport pandas as pd\r\nfrom config import DB_PATH, TABLE_CLASSIFIED\r\n\r\ndef main():\r\n    conn = sqlite3.connect(DB_PATH)\r\n    schema = pd.read_sql_query(\r\n        f\"PRAGMA table_info({TABLE_CLASSIFIED})\",\r\n        conn\r\n    )\r\n    conn.close()\r\n    print(\"Lentelės schema:\\n\", schema.to_string(index=False))\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inspect_schema.py b/inspect_schema.py
--- a/inspect_schema.py	(revision f55e0a20c2ecf819aa8fd3351acbce6d7705499d)
+++ b/inspect_schema.py	(date 1749045312095)
@@ -1,4 +1,3 @@
-# inspect_schema.py
 import sqlite3
 import pandas as pd
 from config import DB_PATH, TABLE_CLASSIFIED
Index: assets/custom.css
===================================================================
diff --git a/assets/custom.css b/assets/custom.css
deleted file mode 100644
--- a/assets/custom.css	(revision f55e0a20c2ecf819aa8fd3351acbce6d7705499d)
+++ /dev/null	(revision f55e0a20c2ecf819aa8fd3351acbce6d7705499d)
@@ -1,52 +0,0 @@
-body {
-    font-family: 'Open Sans', sans-serif;
-    background-color: #FFFFFF;
-    margin: 0;
-    padding: 2rem;
-    color: #2C3E50;
-}
-
-h1, h2, h3, h4 {
-    font-family: 'IBM Plex Sans', sans-serif;
-    color: #2C3E50;
-    margin-bottom: 1rem;
-}
-
-.main-container {
-  padding: 2rem;
-  background-color: #F5F7FA;
-  font-family: "Open Sans", sans-serif;
-}
-
-.grid-filters {
-  display: grid;
-  grid-template-columns: 1fr 1fr;
-  gap: 1rem;
-}
-
-.grid-2 {
-  display: grid;
-  grid-template-columns: 1fr 1fr;
-  gap: 1.5rem;
-  margin-top: 1.5rem;
-}
-.card {
-  background-color: #FFFFFF;
-  border-radius: 1rem;
-  padding: 1rem;
-  box-shadow: none;
-  border: 1px solid #E0E0E0;
-}
-.dash-dropdown, .DatePickerRange {
-    width: 100%;
-}
-
-.dash-table-container {
-    margin-top: 2rem;
-    font-family: 'Roboto Mono', monospace;
-}
-
-.tab--selected {
-  background-color: #F4D03F;
-}
-
Index: visualize/assets/custom.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/visualize/assets/custom.css b/visualize/assets/custom.css
new file mode 100644
--- /dev/null	(date 1749065722603)
+++ b/visualize/assets/custom.css	(date 1749065722603)
@@ -0,0 +1,95 @@
+@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans&family=Open+Sans&family=Roboto+Mono&display=swap');
+
+body {
+  font-family: 'Open Sans', sans-serif;
+  background-color: #FFFFFF;
+  margin: 0;
+  padding: 2rem;
+  color: #2C3E50;
+}
+
+h1, h2, h3, h4 {
+  font-family: 'IBM Plex Sans', sans-serif;
+  color: #2C3E50;
+  margin-bottom: 1rem;
+}
+
+.main-container {
+  padding: 2rem;
+  background-color: #F5F7FA;
+  font-family: 'Open Sans', sans-serif;
+}
+
+.grid-filters {
+  display: grid;
+  grid-template-columns: 1fr 1fr;
+  gap: 1rem;
+}
+.section {
+  margin-top: 2rem;
+}
+
+.grid-2 {
+  display: grid;
+  grid-template-columns: 1fr 1.4fr;
+  gap: 1.5rem;
+  margin-top: 1.5rem;
+}
+
+
+.card {
+  background-color: #FFFFFF;
+  border-radius: 1rem;
+  padding: 1rem;
+  box-shadow: none;
+  border: 1px solid #E0E0E0;
+  width: 100%;
+  max-width: 100%;
+  box-sizing: border-box;
+}
+.card--primary {
+  border: 2px solid #C0392B;
+  background-color: #FFF7F7;
+}
+
+.dash-dropdown, .DatePickerRange {
+  width: 100%;
+}
+
+.dash-table-container {
+  margin-top: 2rem;
+  font-family: 'Roboto Mono', monospace;
+}
+
+.tab--selected {
+  background-color: #F4D03F;
+  font-weight: bold;
+  border-bottom: 2px solid #C0392B;
+}
+
+
+.responsive-grid {
+  display: grid;
+  gap: 2rem;
+  align-items: start;
+  min-width: 0;
+}
+
+@media (min-width: 1025px) {
+  .responsive-grid {
+    grid-template-columns: 2fr 1fr;
+  }
+}
+
+@media (max-width: 1024px) {
+  .responsive-grid > *:not(:first-child) {
+    margin-top: 1.5rem;
+  }
+}
+
+
+  .grid-filters,
+  .grid-2 {
+    grid-template-columns: 1fr;
+  }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b3e030bc-a6f9-41ba-be25-b65ded6e56e5\" name=\"Changes\" comment=\"improved dash\">\r\n      <change afterPath=\"$PROJECT_DIR$/processing/__init__.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/processing/lemmatization.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/scripts/clean_words_by_committee.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/stop_words_lt.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/analysis/main_analysis.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/analysis/main_analysis.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/archive/dashboard.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/archive/dashboard.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/archive/theme_distribution.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/archive/theme_distribution.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assets/custom.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/assets/custom.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data/diagnostics/diagnostics.csv\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/data/diagnostics/diagnostics.csv\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/visualize/callbacks/layout_callbacks.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/visualize/callbacks/layout_callbacks.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/visualize/dashboard.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/visualize/dashboard.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PREVIEW_PUSH_PROTECTED_ONLY\" value=\"true\" />\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;VykintaP&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/VykintaP/darbotvarkiu_analize.git&quot;,\r\n    &quot;accountId&quot;: &quot;e319449e-a248-4283-a4aa-ad179d496221&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2wzjfXTzFk6xLoh89noNKmxQBcG\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Python tests.Python tests in test_classify.py.executor\": \"Run\",\r\n    \"Python tests.Python tests in test_classify_with_api.py.executor\": \"Run\",\r\n    \"Python tests.Python tests in test_cleaning.py.executor\": \"Run\",\r\n    \"Python tests.Python tests in test_gpt_key.py.executor\": \"Run\",\r\n    \"Python tests.Python tests in test_scraper.py.executor\": \"Run\",\r\n    \"Python tests.Python tests in test_train_classifier.py.executor\": \"Run\",\r\n    \"Python.analyze.executor\": \"Run\",\r\n    \"Python.analyze_plot.executor\": \"Run\",\r\n    \"Python.analyze_topics.executor\": \"Run\",\r\n    \"Python.app.executor\": \"Run\",\r\n    \"Python.check_db.executor\": \"Run\",\r\n    \"Python.classify.executor\": \"Run\",\r\n    \"Python.classify_with_gpt_api.executor\": \"Run\",\r\n    \"Python.clean_questions.executor\": \"Run\",\r\n    \"Python.clean_words_by_committee.executor\": \"Run\",\r\n    \"Python.cleaning_pipeline.executor\": \"Run\",\r\n    \"Python.committee_callbacks.executor\": \"Run\",\r\n    \"Python.committee_diagram.executor\": \"Run\",\r\n    \"Python.committee_donut.executor\": \"Run\",\r\n    \"Python.committee_profiles.executor\": \"Run\",\r\n    \"Python.committee_summary_table.executor\": \"Run\",\r\n    \"Python.config.executor\": \"Run\",\r\n    \"Python.create_structure.executor\": \"Run\",\r\n    \"Python.dashboard.executor\": \"Run\",\r\n    \"Python.data_quality_report.executor\": \"Run\",\r\n    \"Python.filters.executor\": \"Run\",\r\n    \"Python.generate_training_data.executor\": \"Run\",\r\n    \"Python.get_commitees.executor\": \"Run\",\r\n    \"Python.inspect_schema.executor\": \"Run\",\r\n    \"Python.layout_callbacks.executor\": \"Run\",\r\n    \"Python.load_to_sql.executor\": \"Run\",\r\n    \"Python.main_analysis.executor\": \"Run\",\r\n    \"Python.merge_agendas.executor\": \"Run\",\r\n    \"Python.mistral_api_classifier.executor\": \"Run\",\r\n    \"Python.mistral_classifier.executor\": \"Run\",\r\n    \"Python.plotting.executor\": \"Run\",\r\n    \"Python.run_load_to_db.executor\": \"Run\",\r\n    \"Python.run_pipeline.executor\": \"Run\",\r\n    \"Python.run_tests.executor\": \"Run\",\r\n    \"Python.scraper.executor\": \"Run\",\r\n    \"Python.theme_area.executor\": \"Run\",\r\n    \"Python.theme_distribution.executor\": \"Run\",\r\n    \"Python.train_classifier.executor\": \"Run\",\r\n    \"Python.translate_and_classify.executor\": \"Run\",\r\n    \"Python.visualize_topics.executor\": \"Run\",\r\n    \"Python.wordcloud_component.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"last_opened_file_path\": \"C:/Users/Vykinta/PycharmProjects/darbotvarkiu_analize/archive\",\r\n    \"settings.editor.selected.configurable\": \"preferences.lookFeel\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Vykinta\\PycharmProjects\\darbotvarkiu_analize\\archive\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Vykinta\\PycharmProjects\\darbotvarkiu_analize\\visualize\" />\r\n      <recent name=\"C:\\Users\\Vykinta\\PycharmProjects\\darbotvarkiu_analize\\archive\" />\r\n      <recent name=\"C:\\Users\\Vykinta\\PycharmProjects\\darbotvarkiu_analize\\visualize\\components\" />\r\n      <recent name=\"C:\\Users\\Vykinta\\PycharmProjects\\darbotvarkiu_analize\\scripts\" />\r\n      <recent name=\"C:\\Users\\Vykinta\\PycharmProjects\\darbotvarkiu_analize\\data\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"dashboard\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"darbotvarkiu_analize\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.13 (darbotvarkiu_analize)\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/visualize/dashboard.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"run_pipeline\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"darbotvarkiu_analize\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"C:\\Users\\Vykinta\\PycharmProjects\\darbotvarkiu_analize\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/scripts/run_pipeline.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Python.dashboard\" />\r\n      <item itemvalue=\"Python.run_pipeline\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.run_pipeline\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-dfff61a61320-9cdd278e9d02-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-251.25410.159\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"b3e030bc-a6f9-41ba-be25-b65ded6e56e5\" name=\"Changes\" comment=\"\" />\r\n      <created>1747051400073</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1747051400073</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00001\" summary=\"First commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747819812281</created>\r\n      <option name=\"number\" value=\"LOCAL−00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00001\" />\r\n      <updated>1747819812281</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00002\" summary=\"Second commit - changes scraper and test_scraper, file structure\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747827267305</created>\r\n      <option name=\"number\" value=\"LOCAL−00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00002\" />\r\n      <updated>1747827267305</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00003\" summary=\"Refactor cleaning pipeline and add robust quality + testing tools&#10;&#10;- Split `cleaning_pipeline.py` into strict cleaning logic only (removed classification)&#10;- Created `data_quality_report.py` to generate file-level data quality diagnostics&#10;- Added `label_keywords.py` stub for future NLP feature extraction&#10;- Implemented `test_cleaning.py`:&#10;  - tests `clean_question` normalization&#10;  - tests full `clean_all_raw_files()` pipeline with mock input&#10;  - verifies filtered output and logging&#10;- Minor updates to `scraper.py` and `test_scraper.py` for integration and stability&#10;- Removed legacy `clean_questions.py` (superseded)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747837198441</created>\r\n      <option name=\"number\" value=\"LOCAL−00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00003\" />\r\n      <updated>1747837198441</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00004\" summary=\"Refactor cleaning pipeline and add robust quality + testing tools&#10;&#10;- Split `cleaning_pipeline.py` into strict cleaning logic only (removed classification)&#10;- Created `data_quality_report.py` to generate file-level data quality diagnostics&#10;- Added `label_keywords.py` stub for future NLP feature extraction&#10;- Implemented `test_cleaning.py`:&#10;  - tests `clean_question` normalization&#10;  - tests full `clean_all_raw_files()` pipeline with mock input&#10;  - verifies filtered output and logging&#10;- Minor updates to `scraper.py` and `test_scraper.py` for integration and stability&#10;- Removed legacy `clean_questions.py` (superseded)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747840501715</created>\r\n      <option name=\"number\" value=\"LOCAL−00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00004\" />\r\n      <updated>1747840501715</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00005\" summary=\"Changed cleaning and scraping to identify project_idx flexibly\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747907880224</created>\r\n      <option name=\"number\" value=\"LOCAL−00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00005\" />\r\n      <updated>1747907880224</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00006\" summary=\"more elaborate testing,\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747914124363</created>\r\n      <option name=\"number\" value=\"LOCAL−00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00006\" />\r\n      <updated>1747914124363</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00007\" summary=\"added classification (transformers, translator)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747923291359</created>\r\n      <option name=\"number\" value=\"LOCAL−00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00007\" />\r\n      <updated>1747923291359</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00008\" summary=\"classification with mistral_classifier.py\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748344300643</created>\r\n      <option name=\"number\" value=\"LOCAL−00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00008\" />\r\n      <updated>1748344300643</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00009\" summary=\"classification with mistral_classifier.py\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748344315080</created>\r\n      <option name=\"number\" value=\"LOCAL−00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00009\" />\r\n      <updated>1748344315080</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00010\" summary=\"classification with mistral_classifier API\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748350765761</created>\r\n      <option name=\"number\" value=\"LOCAL−00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00010\" />\r\n      <updated>1748350765761</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00011\" summary=\"added:&#10;&#10;translation LT &lt;-&gt; EN&#10;donnut pie&#10;sql\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748435746670</created>\r\n      <option name=\"number\" value=\"LOCAL−00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00011\" />\r\n      <updated>1748435746670</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00012\" summary=\"fixed some visualisations\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748509870306</created>\r\n      <option name=\"number\" value=\"LOCAL−00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00012\" />\r\n      <updated>1748509870306</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00013\" summary=\"fixed some visualisations\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748525634981</created>\r\n      <option name=\"number\" value=\"LOCAL−00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00013\" />\r\n      <updated>1748525634981</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00014\" summary=\"fixed some visualisations\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748525648686</created>\r\n      <option name=\"number\" value=\"LOCAL−00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00014\" />\r\n      <updated>1748525648686</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00015\" summary=\"Improve robustness of topic classification: added logging for unmapped subtopics and optional CSV export for diagnostics\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748722251441</created>\r\n      <option name=\"number\" value=\"LOCAL−00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00015\" />\r\n      <updated>1748722251441</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00016\" summary=\"restarted creating dash\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748960365726</created>\r\n      <option name=\"number\" value=\"LOCAL−00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00016\" />\r\n      <updated>1748960365726</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00017\" summary=\"improved dash\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748980618177</created>\r\n      <option name=\"number\" value=\"LOCAL−00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00017\" />\r\n      <updated>1748980618177</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00018\" summary=\"improved dash\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748980634343</created>\r\n      <option name=\"number\" value=\"LOCAL−00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00018\" />\r\n      <updated>1748980634343</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"19\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"First commit\" />\r\n    <MESSAGE value=\"Second commit - changes scraper and test_scraper, file structure\" />\r\n    <MESSAGE value=\"Refactor cleaning pipeline and add robust quality + testing tools&#10;&#10;- Split `cleaning_pipeline.py` into strict cleaning logic only (removed classification)&#10;- Created `data_quality_report.py` to generate file-level data quality diagnostics&#10;- Added `label_keywords.py` stub for future NLP feature extraction&#10;- Implemented `test_cleaning.py`:&#10;  - tests `clean_question` normalization&#10;  - tests full `clean_all_raw_files()` pipeline with mock input&#10;  - verifies filtered output and logging&#10;- Minor updates to `scraper.py` and `test_scraper.py` for integration and stability&#10;- Removed legacy `clean_questions.py` (superseded)\" />\r\n    <MESSAGE value=\"Changed cleaning and scraping to identify project_idx flexibly\" />\r\n    <MESSAGE value=\"more elaborate testing,\" />\r\n    <MESSAGE value=\"added classification (transformers, translator)\" />\r\n    <MESSAGE value=\"classification with mistral_classifier.py\" />\r\n    <MESSAGE value=\"classification with mistral_classifier API\" />\r\n    <MESSAGE value=\"added:&#10;&#10;translation LT &lt;-&gt; EN&#10;donnut pie&#10;sql\" />\r\n    <MESSAGE value=\"fixed some visualisations\" />\r\n    <MESSAGE value=\"Improve robustness of topic classification: added logging for unmapped subtopics and optional CSV export for diagnostics\" />\r\n    <MESSAGE value=\"restarted creating dash\" />\r\n    <MESSAGE value=\"improved dash\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"improved dash\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/visualize/main.py</url>\r\n          <line>8</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f55e0a20c2ecf819aa8fd3351acbce6d7705499d)
+++ b/.idea/workspace.xml	(date 1749065780234)
@@ -4,19 +4,18 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="b3e030bc-a6f9-41ba-be25-b65ded6e56e5" name="Changes" comment="improved dash">
-      <change afterPath="$PROJECT_DIR$/processing/__init__.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/processing/lemmatization.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/scripts/clean_words_by_committee.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/stop_words_lt.txt" afterDir="false" />
+    <list default="true" id="b3e030bc-a6f9-41ba-be25-b65ded6e56e5" name="Changes" comment="add lemminization (not implemented yet)">
+      <change afterPath="$PROJECT_DIR$/visualize/assets/custom.css" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/visualize/components/bar_committees.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/visualize/utils/topic_labels.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/analysis/main_analysis.py" beforeDir="false" afterPath="$PROJECT_DIR$/analysis/main_analysis.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/archive/dashboard.py" beforeDir="false" afterPath="$PROJECT_DIR$/archive/dashboard.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/archive/theme_distribution.py" beforeDir="false" afterPath="$PROJECT_DIR$/archive/theme_distribution.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/custom.css" beforeDir="false" afterPath="$PROJECT_DIR$/assets/custom.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/data/diagnostics/diagnostics.csv" beforeDir="false" afterPath="$PROJECT_DIR$/data/diagnostics/diagnostics.csv" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/custom.css" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/seimas_logo.png" beforeDir="false" afterPath="$PROJECT_DIR$/visualize/assets/seimas_logo.png" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/config.py" beforeDir="false" afterPath="$PROJECT_DIR$/config.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/inspect_schema.py" beforeDir="false" afterPath="$PROJECT_DIR$/inspect_schema.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/visualize/callbacks/filter_callbacks.py" beforeDir="false" afterPath="$PROJECT_DIR$/visualize/callbacks/filter_callbacks.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/visualize/callbacks/layout_callbacks.py" beforeDir="false" afterPath="$PROJECT_DIR$/visualize/callbacks/layout_callbacks.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/visualize/dashboard.py" beforeDir="false" afterPath="$PROJECT_DIR$/visualize/dashboard.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/visualize/components/filters.py" beforeDir="false" afterPath="$PROJECT_DIR$/visualize/components/filters.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -132,7 +131,7 @@
       <recent name="C:\Users\Vykinta\PycharmProjects\darbotvarkiu_analize\data" />
     </key>
   </component>
-  <component name="RunManager">
+  <component name="RunManager" selected="Python.dashboard">
     <configuration name="dashboard" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
       <module name="darbotvarkiu_analize" />
       <option name="ENV_FILES" value="" />
@@ -330,7 +329,14 @@
       <option name="presentableId" value="LOCAL−00018" />
       <updated>1748980634343</updated>
     </task>
-    <option name="localTasksCounter" value="19" />
+    <task id="LOCAL−00019" summary="add lemminization (not implemented yet)">
+      <option name="closed" value="true" />
+      <created>1749042500803</created>
+      <option name="number" value="LOCAL−00019" />
+      <option name="presentableId" value="LOCAL−00019" />
+      <updated>1749042500803</updated>
+    </task>
+    <option name="localTasksCounter" value="20" />
     <servers />
   </component>
   <component name="VcsManagerConfiguration">
@@ -347,7 +353,8 @@
     <MESSAGE value="Improve robustness of topic classification: added logging for unmapped subtopics and optional CSV export for diagnostics" />
     <MESSAGE value="restarted creating dash" />
     <MESSAGE value="improved dash" />
-    <option name="LAST_COMMIT_MESSAGE" value="improved dash" />
+    <MESSAGE value="add lemminization (not implemented yet)" />
+    <option name="LAST_COMMIT_MESSAGE" value="add lemminization (not implemented yet)" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
@@ -356,6 +363,10 @@
           <url>file://$PROJECT_DIR$/visualize/main.py</url>
           <line>8</line>
           <option name="timeStamp" value="1" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
+          <url>file://$PROJECT_DIR$/visualize/components/questions_table.py</url>
+          <option name="timeStamp" value="3" />
         </line-breakpoint>
       </breakpoints>
     </breakpoint-manager>
Index: visualize/utils/topic_labels.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/visualize/utils/topic_labels.py b/visualize/utils/topic_labels.py
new file mode 100644
--- /dev/null	(date 1749047310916)
+++ b/visualize/utils/topic_labels.py	(date 1749047310916)
@@ -0,0 +1,18 @@
+TOPIC_LABELS = {
+    "State governance, regional policy and public administration": "Valstybės valdymas, regioninė politika ir viešasis administravimas",
+    "Environment, forests and climate change": "Aplinka, miškai ir klimato kaita",
+    "Energy": "Energetika",
+    "Public finance": "Viešieji finansai",
+    "Economic competitiveness and state information resources": "Ekonomikos konkurencingumas ir valstybės informaciniai ištekliai",
+    "State security and defense": "Valstybės saugumas ir gynyba",
+    "Public security": "Viešasis saugumas",
+    "Culture": "Kultūra",
+    "Social security and employment": "Socialinė apsauga ir užimtumas",
+    "Transportation and communications": "Transportas ir ryšiai",
+    "Health": "Sveikata",
+    "Education, science and sport": "Švietimas, mokslas ir sportas",
+    "Justice": "Teisingumas",
+    "Foreign policy": "Užsienio politika",
+    "Land and food farming, rural development and fisheries": "Žemės ir maisto ūkis, kaimo plėtra ir žuvininkystė",
+    "Neatpažinta tema": "Neatpažinta tema"
+}
Index: visualize/components/bar_committees.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/visualize/components/bar_committees.py b/visualize/components/bar_committees.py
new file mode 100644
--- /dev/null	(date 1749065566423)
+++ b/visualize/components/bar_committees.py	(date 1749065566423)
@@ -0,0 +1,26 @@
+import plotly.express as px
+
+def get_committees_bar(df):
+    counts = df["komitetas"].value_counts().reset_index()
+    counts.columns = ["Komitetas", "Kiekis"]
+    counts = counts.sort_values("Kiekis", ascending=True)
+
+    fig = px.bar(
+        counts,
+        x="Kiekis",
+        y="Komitetas",
+        orientation="h",
+        text="Kiekis",
+        color_discrete_sequence=["#2C3E50"]
+    )
+
+    fig.update_traces(textposition="outside")
+    fig.update_layout(
+        height=500,
+        margin=dict(l=180, r=20, t=40, b=40),
+        xaxis_title="Klausimų skaičius",
+        yaxis_title=None,
+        showlegend=False
+    )
+
+    return fig
